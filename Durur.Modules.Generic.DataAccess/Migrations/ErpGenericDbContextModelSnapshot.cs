// <auto-generated />
using System;
using Durur.Modules.Generic.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Durur.Modules.Generic.DataAccess.Migrations
{
    [DbContext(typeof(ErpGenericDbContext))]
    partial class ErpGenericDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.CompanyPosition", b =>
                {
                    b.Property<int>("Company_Position_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company_Position_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company_Position_Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("EmployeeCompanyPositionDepartment_ID")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeCompanyPositionEmployee_ID")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeCompanyPositionPosition_ID")
                        .HasColumnType("int");

                    b.HasKey("Company_Position_ID");

                    b.HasIndex("EmployeeCompanyPositionDepartment_ID", "EmployeeCompanyPositionPosition_ID", "EmployeeCompanyPositionEmployee_ID");

                    b.ToTable("CompanyPositions");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Country", b =>
                {
                    b.Property<int>("Country_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISO_Code")
                        .IsRequired()
                        .HasColumnType("char(2)");

                    b.Property<int>("Phone_Code")
                        .HasColumnType("int");

                    b.HasKey("Country_ID");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Customer", b =>
                {
                    b.Property<int>("Customer_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Primary_Phone_Number")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Secondary_Phone_Number")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.HasKey("Customer_ID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.CustomerAddress", b =>
                {
                    b.Property<int>("CustomerAddress_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Customer_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Location_ID")
                        .HasColumnType("int");

                    b.HasKey("CustomerAddress_ID");

                    b.HasIndex("Customer_ID");

                    b.HasIndex("Location_ID");

                    b.ToTable("Customer_Addresses");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Department", b =>
                {
                    b.Property<int>("Department_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department_Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("EmployeePositionDepartment_ID")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeePositionEmployee_ID")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeePositionPosition_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Location_ID")
                        .HasColumnType("int");

                    b.HasKey("Department_ID");

                    b.HasIndex("Location_ID");

                    b.HasIndex("EmployeePositionDepartment_ID", "EmployeePositionPosition_ID", "EmployeePositionEmployee_ID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Employee", b =>
                {
                    b.Property<int>("Employee_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EMail")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("EmployeeMasterEmployee_ID")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("Hire_Date")
                        .HasColumnType("date");

                    b.Property<int?>("Job_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone_Number")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<int?>("PositionDepartment_ID")
                        .HasColumnType("int");

                    b.Property<int?>("PositionEmployee_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Position_ID")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("money");

                    b.HasKey("Employee_ID");

                    b.HasIndex("EmployeeMasterEmployee_ID");

                    b.HasIndex("Job_ID");

                    b.HasIndex("PositionDepartment_ID", "Position_ID", "PositionEmployee_ID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.EmployeeCompanyPosition", b =>
                {
                    b.Property<int>("Department_ID")
                        .HasColumnType("int");

                    b.Property<int>("Position_ID")
                        .HasColumnType("int");

                    b.Property<int>("Employee_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Department_ID", "Position_ID", "Employee_ID");

                    b.ToTable("Employee_CompanyPositions");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Inventory", b =>
                {
                    b.Property<int>("Warehouse_ID")
                        .HasColumnType("int");

                    b.Property<int>("Product_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuantityOnHand")
                        .HasColumnType("int");

                    b.HasKey("Warehouse_ID", "Product_ID");

                    b.HasIndex("Product_ID");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Job", b =>
                {
                    b.Property<int>("Job_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Job_Title")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Job_ID");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Location", b =>
                {
                    b.Property<int>("Location_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Country_ID")
                        .HasColumnType("int");

                    b.HasKey("Location_ID");

                    b.HasIndex("Country_ID");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Order", b =>
                {
                    b.Property<int>("Order_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Customer_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Delivery_AddressCustomerAddress_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Order_Status_ID")
                        .HasColumnType("int");

                    b.Property<decimal>("Order_Total")
                        .HasColumnType("money");

                    b.HasKey("Order_ID");

                    b.HasIndex("Customer_ID");

                    b.HasIndex("Delivery_AddressCustomerAddress_ID");

                    b.HasIndex("Order_Status_ID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.OrderStatus", b =>
                {
                    b.Property<int>("Order_Status_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Order_Current_Status")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Order_Status_ID");

                    b.ToTable("Order_Statuses");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.OrderedItem", b =>
                {
                    b.Property<int>("Ordered_Item_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InventoryProduct_ID")
                        .HasColumnType("int");

                    b.Property<int?>("InventoryWarehouse_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Order_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Product_ID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Unit_Price")
                        .HasColumnType("money");

                    b.HasKey("Ordered_Item_ID");

                    b.HasIndex("Order_ID");

                    b.HasIndex("Product_ID");

                    b.HasIndex("InventoryWarehouse_ID", "InventoryProduct_ID");

                    b.ToTable("Ordered_Items");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Product", b =>
                {
                    b.Property<int>("Product_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("List_Price")
                        .HasColumnType("money");

                    b.Property<string>("Product_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Supplier_ID")
                        .HasColumnType("int");

                    b.Property<int>("Warranty_Period")
                        .HasColumnType("int");

                    b.HasKey("Product_ID");

                    b.HasIndex("Supplier_ID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Supplier", b =>
                {
                    b.Property<int>("Supplier_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Location_ID")
                        .HasColumnType("int");

                    b.Property<string>("Supplier_Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Supplier_ID");

                    b.HasIndex("Location_ID");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenEndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Warehouse", b =>
                {
                    b.Property<int>("Warehouse_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Location_ID")
                        .HasColumnType("int");

                    b.Property<string>("Warehouse_Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Warehouse_ID");

                    b.HasIndex("Location_ID");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.CompanyPosition", b =>
                {
                    b.HasOne("Durur.Modules.Generic.Entities.Model.EmployeeCompanyPosition", "EmployeeCompanyPosition")
                        .WithMany("Positions")
                        .HasForeignKey("EmployeeCompanyPositionDepartment_ID", "EmployeeCompanyPositionPosition_ID", "EmployeeCompanyPositionEmployee_ID");

                    b.Navigation("EmployeeCompanyPosition");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Customer", b =>
                {
                    b.HasOne("Durur.Modules.Generic.Entities.Model.User", "User")
                        .WithOne("Customer")
                        .HasForeignKey("Durur.Modules.Generic.Entities.Model.Customer", "Customer_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.CustomerAddress", b =>
                {
                    b.HasOne("Durur.Modules.Generic.Entities.Model.Customer", "Customer")
                        .WithMany("Customer_Addresses")
                        .HasForeignKey("Customer_ID");

                    b.HasOne("Durur.Modules.Generic.Entities.Model.Location", "Location")
                        .WithMany("Customer_Addresses")
                        .HasForeignKey("Location_ID");

                    b.Navigation("Customer");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Department", b =>
                {
                    b.HasOne("Durur.Modules.Generic.Entities.Model.Location", "Location")
                        .WithMany("Departments")
                        .HasForeignKey("Location_ID");

                    b.HasOne("Durur.Modules.Generic.Entities.Model.EmployeeCompanyPosition", "EmployeePosition")
                        .WithMany("Departments")
                        .HasForeignKey("EmployeePositionDepartment_ID", "EmployeePositionPosition_ID", "EmployeePositionEmployee_ID");

                    b.Navigation("EmployeePosition");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Employee", b =>
                {
                    b.HasOne("Durur.Modules.Generic.Entities.Model.Employee", "EmployeeMaster")
                        .WithMany()
                        .HasForeignKey("EmployeeMasterEmployee_ID");

                    b.HasOne("Durur.Modules.Generic.Entities.Model.Job", "Job")
                        .WithMany("Employees")
                        .HasForeignKey("Job_ID");

                    b.HasOne("Durur.Modules.Generic.Entities.Model.EmployeeCompanyPosition", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionDepartment_ID", "Position_ID", "PositionEmployee_ID");

                    b.Navigation("EmployeeMaster");

                    b.Navigation("Job");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Inventory", b =>
                {
                    b.HasOne("Durur.Modules.Generic.Entities.Model.Product", "Product")
                        .WithMany("Stock_Warehouses")
                        .HasForeignKey("Product_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Durur.Modules.Generic.Entities.Model.Warehouse", "Warehouse")
                        .WithMany("Stock_Products")
                        .HasForeignKey("Warehouse_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Location", b =>
                {
                    b.HasOne("Durur.Modules.Generic.Entities.Model.Country", "Country")
                        .WithMany("Locations")
                        .HasForeignKey("Country_ID");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Order", b =>
                {
                    b.HasOne("Durur.Modules.Generic.Entities.Model.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("Customer_ID");

                    b.HasOne("Durur.Modules.Generic.Entities.Model.CustomerAddress", "Delivery_Address")
                        .WithMany("Orders")
                        .HasForeignKey("Delivery_AddressCustomerAddress_ID");

                    b.HasOne("Durur.Modules.Generic.Entities.Model.OrderStatus", "Order_Status")
                        .WithMany()
                        .HasForeignKey("Order_Status_ID");

                    b.Navigation("Customer");

                    b.Navigation("Delivery_Address");

                    b.Navigation("Order_Status");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.OrderedItem", b =>
                {
                    b.HasOne("Durur.Modules.Generic.Entities.Model.Order", "Order")
                        .WithMany("Ordered_Items")
                        .HasForeignKey("Order_ID");

                    b.HasOne("Durur.Modules.Generic.Entities.Model.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_ID");

                    b.HasOne("Durur.Modules.Generic.Entities.Model.Inventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("InventoryWarehouse_ID", "InventoryProduct_ID");

                    b.Navigation("Inventory");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Product", b =>
                {
                    b.HasOne("Durur.Modules.Generic.Entities.Model.Supplier", "Supplier")
                        .WithMany("Supplied_Products")
                        .HasForeignKey("Supplier_ID");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Supplier", b =>
                {
                    b.HasOne("Durur.Modules.Generic.Entities.Model.Location", "Location")
                        .WithMany()
                        .HasForeignKey("Location_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Warehouse", b =>
                {
                    b.HasOne("Durur.Modules.Generic.Entities.Model.Location", "Location")
                        .WithMany("Warehouses")
                        .HasForeignKey("Location_ID");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Durur.Modules.Generic.Entities.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Durur.Modules.Generic.Entities.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Durur.Modules.Generic.Entities.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Durur.Modules.Generic.Entities.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Country", b =>
                {
                    b.Navigation("Locations");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Customer", b =>
                {
                    b.Navigation("Customer_Addresses");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.CustomerAddress", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.EmployeeCompanyPosition", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Employees");

                    b.Navigation("Positions");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Job", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Location", b =>
                {
                    b.Navigation("Customer_Addresses");

                    b.Navigation("Departments");

                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Order", b =>
                {
                    b.Navigation("Ordered_Items");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Product", b =>
                {
                    b.Navigation("Stock_Warehouses");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Supplier", b =>
                {
                    b.Navigation("Supplied_Products");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.User", b =>
                {
                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Durur.Modules.Generic.Entities.Model.Warehouse", b =>
                {
                    b.Navigation("Stock_Products");
                });
#pragma warning restore 612, 618
        }
    }
}
